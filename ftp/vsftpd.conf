#################################搭建FTP服务器前的准备#####################################
#(1):创建目录/home/ftp,并执行chomd -R o+w /home/ljj/ftp
#(2):新建文件/etc/vsftpd.email_passwords，并提供匿名用户登录时可用的密码
#(3):新建文件/etc/vsftpd.user_list，提供禁止登录的本地用户
#（4）：新建文件/etc/vsftpd.chroot_list，提供可以随意切换到其他目录的用户

#########################################################################################
#备注：下面一切的配置可以使用man 5 vsftpd.config来查询技术细节
#模块说明：全局配置，匿名配置，本地配置，SSL配置，日志相关
#########################################################################################
##########################################全局配置########################################
#########################################################################################
#YES:vsftpd将会运行在stand alone模式，监听ipv4套接字
#默认：NO
#备注：同listen_ipv6是互相排斥的，只能开启一个，否则会报错
listen=YES
#----------------------------------------------------------------------------------------
#YES:同listen,不过，该参数是监听ipv6套接字
#默认：NO
#备注：同listen是互相排斥的，只能开启一个，否则会报错
listen_ipv6=NO
#----------------------------------------------------------------------------------------
#系统默认：21
#备注:FTP连接的命令通道（适合stand alone，对super daemon无效）
listen_port=21
#----------------------------------------------------------------------------------------
#YES:允许从端口获得数据连接
#默认：YES
port_enable=YES
#----------------------------------------------------------------------------------------
#YES:主动式Activite连接，FTP服务器向FTP客户端发送数据ftp-data所使用的端口号
#系统默认：NO
connect_from_port_20=YES
ftp_data_port=20
#----------------------------------------------------------------------------------------
#YES:支持被动式连接，一定要设置为YES
#系统默认：YES
pasv_enable=YES
#----------------------------------------------------------------------------------------
#YES:允许下载请求
#NO:对FTP服务器的所有下载请求都会被拒绝，该配置对所有用户都有效
#系统默认：YES
download_enable=YES
#----------------------------------------------------------------------------------------
#YES:更改文件系统的FPT命令都是被允许的
#默认：NO
#备注：控制是否允许执行更改文件系统的FTP命令，该配置决定着是否允许FTP客户端操作FTP服务器的数据
write_enable=YES
#----------------------------------------------------------------------------------------
#NO:所有的目录命令将会没有执行权限,诸如dir,ls之类的命令都会被拒绝
#系统默认：YES
dirlist_enable=YES
#----------------------------------------------------------------------------------------
#YES:开启tcp_wrappers支持
#默认：NO
tcp_wrappers=YES
#----------------------------------------------------------------------------------------
#YES:显示目录清单时使用本地时间而不是GMT时间,vsftpd默认使用格林尼治时间，比中国晚8小时
#默认：NO
use_localtime=YES
#----------------------------------------------------------------------------------------
#YES:在文件或者目录列表中，用户和用户组均以数字显示，该配置可以获得文本名称
#默认：NO
text_userdb_names=YES
#----------------------------------------------------------------------------------------
#YES:在目录列表中,所有用户以及用户组的信息都会显示为ftp
#默认：NO
hide_ids=YES
#----------------------------------------------------------------------------------------
#YES:以.开始的文件或目录都会被显示出来
#系统默认：NO
force_dot_files=YES
#----------------------------------------------------------------------------------------
#备注：login时显示欢迎信息,如果设置了banner_file则此设置无效
ftpd_banner=hello,friends,welecome to FTP server of linjiajun ^_^
#----------------------------------------------------------------------------------------
#备注：指定某个纯文本作为用户登录vsftpd服务器时，所显示的欢迎字段
#banner_file=/etc/banner
#----------------------------------------------------------------------------------------
#YES:vsftpd将会尝试在系统进程列表中显示会话状态信息
#系统默认：NO
setproctitle_enable=YES
#----------------------------------------------------------------------------------------
#YES:FTP服务器的用户在进入一个新目录时，会显示该目录所要注意的内容
#系统默认：NO
#备注：显示的默认文件是.message,也可以使用message_file来设置
dirmessage_enable=YES
message_file=.message
#----------------------------------------------------------------------------------------
#系统默认：/var/run/vsftpd/empty
#备注：该选项指定一个空目录的名字，ftp用户不应该在里面写入数据，在vsftpd不能请求到文件系统时，用户会进入该目录中
secure_chroot_dir=/var/run/vsftpd/empty
#----------------------------------------------------------------------------------------
#系统默认：无　  
#备注：当vsftpd工作在stand alone模式时，所有本地通讯接口的默认的监听地址会被该地址覆盖，即，只监听该地址
#listen_address=192.168.0.2　　 #绑定到某个IP,其它IP不能访问
#----------------------------------------------------------------------------------------
#系统默认：60
#备注：主动式连接(active)下，FTP服务器主动发出的ftp-data连接信号,在60s内得不到客户端的响应，则强制断线
connect_timeout=60
#----------------------------------------------------------------------------------------
#系统默认：60
#备注：被动式连接(passive)下，FTP服务器被动等待FTP客户端回应，超过60s内得不到客户端的响应，则强制断线
accept_timeout=60
#----------------------------------------------------------------------------------------
#系统默认：300
#备注：不论是主动式还是被动式，在FTP服务器与客户端的ftp-data连接已经成功建立后，由于线路问题，120s内还是
#	 无法顺利完成数据传送，则该连接会被vsftp强制剔除
data_connection_timeout=120
#----------------------------------------------------------------------------------------
#系统默认：300
#备注：如果用户在10分钟内没有命令操作，则强制脱机，避免占着茅坑不拉屎
idle_session_timeout=600
#----------------------------------------------------------------------------------------
#系统默认：0(无限制)
#备注：如果vsftp是以stand alone方式启动，该设置项可以设置同一时间最多可以有多少FTP客户端同时连接上vsftpd
max_clients=200
#----------------------------------------------------------------------------------------
#系统默认：0(无限制)
#备注：如果vsftp是以stand alone方式启动，该设置项表示可以从同相同源的网络地址处连接的最大客户端的数量
#     即，一个IP下面最多可以同时在4个终端中使用ftp连接FTP服务器
max_per_ip=4
#----------------------------------------------------------------------------------------
#系统默认：3
#备注：允许FTP登录失败的最大次数
max_login_fails=2
#----------------------------------------------------------------------------------------
#系统默认：0（任意）
#备注：pasv模式的数据连接，被分配的最小端口号；将客户端的数据连接端口限定在50000—60000之间，防止被入侵者捣鬼
#	 设置为0，表示随机选择大于1024的端口
pasv_min_port=50000
#----------------------------------------------------------------------------------------
#系统默认：0（任意）
#备注：pasv模式的数据连接，被分配的最大端口号
pasv_max_port=60000
#-----------------------------------------------------------------------------------------
#YES:在下载过程中，数据以ascii的模式进行传输
#系统默认：NO
ascii_download_enable=NO
#-----------------------------------------------------------------------------------------
#YES:在上传过程中，数据以ascii的模式进行传输
#系统默认：NO
ascii_upload_enable=NO
#-----------------------------------------------------------------------------------------
#YES:每个FTP连接都会拥有一个process负责，可以提高效率，但是，除非系统的配置较高，否则容易耗尽系统资源
#系统默认：NO
one_process_model=NO
#-----------------------------------------------------------------------------------------
#YES:任何上传失败的文件都会被删除
#系统默认：NO
delete_failed_uploads=YES
#-----------------------------------------------------------------------------------------
#YES:所有的上传进程都会对上传的文件附加写锁;所有的下载进程对下载的文件共享读锁
#系统默认：YES
lock_upload_files=YES
#-----------------------------------------------------------------------------------------
#YES:关闭安全检查
#系统默认：NO
pasv_promiscuous=NO
#-----------------------------------------------------------------------------------------
#系统默认：vsftpd　　  
#备注：PAM service vsftpd将要使用的名字
pam_service_name=vsftpd
#-----------------------------------------------------------------------------------------
#系统默认：nobody　  
#备注：当服务器运行于最底层时使用的用户名，nobody的权限相当的低，就算被入侵，入侵者也只能获得nobody的权限
nopriv_user=nobody
#-----------------------------------------------------------------------------------------
#YES:允许使用ls -R命令
#系统默认：NO
#备注：最好不要允许使用ls -R,因为会占用大量的资源
ls_recurse_enable=YES




#########################################################################################
##########################################匿名配置########################################
#########################################################################################
#YES:匿名登录被允许
#NO:匿名登录被允许
#系统默认：NO
#备注：只有该配置项为YES,匿名相关的所有配置才会有效
anonymous_enable=YES
#-------------------------------------------------------------------------------------------
#YES:可以使用chown_username指定的用户名作为匿名用户anonymous登录
#系统默认：root
#备注：登录系统后，使用ls命令查看文件属性时，第三列：用户名显示一列数字，这个数字在/etc/passwd中查看
#	  后不难发现，正是这里设置的ftp用户
chown_uploads=YES
chown_username=ftp
#---------------------------------------------------------------------------------------------
#YES:匿名用户登录时会略过密码检查的步骤，直接进入vsftpd服务器;
#NO:匿名用户登录时，vsftpd会向其询问登录密码
#系统默认：NO
#备注：针对该配置项，匿名用户的用户名是anonymous,密码是空
no_anon_password=NO
#---------------------------------------------------------------------------------------------
#YES:匿名用户在登录时，除非提供email_password_file中指定的密码，否则不允许登录
#系统默认：NO
#备注：这是一个不错的功能，允许匿名用户登录，但是需要提供由管理员告知的登录密码才行
secure_email_list_enable=YES
email_password_file=/etc/vsftpd.email_passwords
#----------------------------------------------------------------------------------------
#系统默认：/srv/ftp (ubuntu16.04)
#备注1：匿名用户登录后所处的目录，跟ftp用户的家目录(/etc/passwd)相同,所以，可以不使用该配置而直接
#	   修改/etc/passwd中用户名为ftp的家目录，ubuntu16.04默认为/srv/ftp
#备注2：匿名用户登陆后所处的目录，该目录必须事先在FTP服务器下面存在，否则FTP客户端登录时会发生错误
#备注3：匿名用户登陆后所处的目录，匿名用户在该目录下不能有写权限,否则会报错，即，该目录的属性中应当o-w
anon_root=/home/ftp
#----------------------------------------------------------------------------------------
#前提：(1)writer_enable=YES;
#	  (2)该匿名用户在文件上传的目的地中有写权限，这一条十分重要，即，FTP客户端匿名用户向FTP服务器
#	     的某一个目录dir上传文件，那么，要求dir的属性中，用户和用户组可以不管，但是其他人得有w权限才行
#YES:匿名用户具有上传文件的权限
#系统默认：NO
#备注：anon_root的备注3与该配置的前提(2)是存在冲突的，一个折中的解决方案是：anon_root指定的目录，
#	  其属性配置o-w,在该目录下的所有目录，其属性配置o+w即可
#备注2：只允许上传文件，不允许上传目录，对于目录，可以先使用mkdir创建目录名（anon_mkdir_write_enable=YES
#	   的前提下），然后进入该目录，再上传文件
anon_upload_enable=YES
#----------------------------------------------------------------------------------------
#系统默认：0600
#备注：将匿名用户上传文件的权限强制更改为配置值
#备注2：若想让匿名用户上传的文件能直接被匿名下载，设置为匿名上传的文件权限0664
#备注3：想要下载一个文件，只要拥有该文件的读权限即可，写权限不需要
chown_upload_mode=0644
#----------------------------------------------------------------------------------------
#系统默认：077
#备注：匿名用户创建文件或目录时的umask值，因为一般情况下是不允许匿名用户直接在FTP服务器上具有写权限的，
#	  所以，对于创建文件，一般不允许，但是，该配置有一个绝好的用途在于，当anon_mkdir_write_enable=YES
#	  时，用户可以在FTP服务器使用mkdir创建目录，此时该配置就决定了创建目录的默认权限
anon_umask=022
#----------------------------------------------------------------------------------------------
#前提：(1)writer_enable=YES;
#	  (2)父目录开放了写权限：o+w
#YES:该匿名用户将被允许创建新目录
#系统默认：NO
anon_mkdir_write_enable=YES
#----------------------------------------------------------------------------------------
#YES:允许匿名用户除了上传和创建目录之外，还能执行写操作，诸如删除，重命名等
#系统默认：NO
#备注：这个选项对匿名用户来说，是个极其危险的选项，谨慎开启
anon_other_write_enable=NO
#----------------------------------------------------------------------------------------
#系统默认：0(无限制)
#备注：匿名用户传输率限制在30KB/s，0表示不受限制
anon_max_rate=30000




##############################################################################################
##########################################本地配置#############################################
##############################################################################################
#(1)避免使用FTP登录的本地用户在Linux系统中离开该用户自己的家目录，而进入/etc 、/usr/local等
#   目录下随意浏览， 需要将用户登录后的活动范围限制在自己的家目录下面，且FTP登录后就位于自己的家目录下面
#(2)通过与下面三个配置的搭配，能实现以下几种效果：
#	1、当chroot_list_enable=YES，chroot_local_user=YES时，在/etc/vsftpd.chroot_list文件中列出的用户，
#	   可以切换到其他目录；未在文件中列出的用户，不能切换到其他目录；
#	2、当chroot_list_enable=YES，chroot_local_user=NO时，在/etc/vsftpd.chroot_list文件中列出的用户，
#	   不能切换到其他目录；未在文件中列出的用户，可以切换到其他目录；
#	3、当chroot_list_enable=NO，chroot_local_user=YES时，所有的用户均不能切换到其他目录；
#	4、当chroot_list_enable=NO，chroot_local_user=NO时，所有的用户均可以切换到其他目录；
#备注：最安全的方案应该的第一个，默认限制所有用户的活动范围，个别特殊的再进行特殊配置
#---------------------------------------------------------------------------------------------
#YES:允许本地用户登录
#系统默认：NO
#备注：对于任何非匿名登录，该配置必须使能
local_enable=YES
#----------------------------------------------------------------------------------------------
#安全机制一：阻挡某些不受欢迎的本地用户，禁止其使用FTP登录系统
#前提：userlist_file指定出的文件必须在/etc下面实现创建，否则连接失败
#YES:开启vsftpd提供的用来阻挡某些不受欢迎的账号的功能
#系统默认：NO
#备注：由于userlist_deny默认是YES,所以，该配置如果为YES,则，vsftp会去读userlist_file指定的文件，
#因此有了“前提”
userlist_enable=YES
#----------------------------------------------------------------------------------------------
#前提：userlist_enable=YES
#YES:在userlist_file指定的文件中的用户，以及/etc/ftpusers文件中的用户无法使用vsftp
#NO:除了由userlist_file指定的文件中列出的用户，其他的用户都被拒绝登录,这个拒绝是在询问密码之前就被拒绝了
#系统默认：YES
#备注：可以将anonymous写入userlist_file指定的文件里，就可以做到不修改匿名用户的配置，从而不允许匿名用户登录的功能
userlist_deny=YES
userlist_file=/etc/vsftpd.user_list

#----------------------------------------------------------------------------------------------
#安全机制二：处理本地用户登录系统后的活动范围
#YES:为本地用户提供用来限制用户登录后其活动范围的功能
#系统默认：NO
#备注：vsftp在2.3.5之后，增强了安全检查，如果用户被限制在其家目录之下，那么，该用户的主目录不能在有写权限，
#	  这样的话，满足了FTP的需求，然而，以后该用户都无法在自己家目录下进行写相关的操作了，为了解决这个矛盾，
#	  可以使用allow_writeable_chroot=YES来关闭vsftp在2.3.5之后增强的安全检查功能
chroot_list_enable=YES
allow_writeable_chroot=YES
#----------------------------------------------------------------------------------------------
#YES:共性配置，所有本地用户将被限制在自己的用户主目录内活动
#系统默认：NO
chroot_local_user=YES
#----------------------------------------------------------------------------------------------
#YES:个性配置：在文件chroot_list下面列出的账户，可以切换到其他目录，而没有列出的，全部被限制在自己的主目录内
#系统默认：NO
chroot_list_file=/etc/vsftpd.chroot_list
#----------------------------------------------------------------------------------------------
#此项设置每本地个用户登陆后其根目录为/home/username/.emacs.d
#系统默认:无
#备注：该配置指定本地用户在登录之后，默认处在家目录下面的那个目录下
#备注2：定义的目录可以是相对路径也可以是绝对路径.相对路径是针对用户家目录来说的
#local_root=.emacs.d

#----------------------------------------------------------------------------------------
#系统默认：0666
#备注：上传文件的默认权限
file_open_mode=0644
#----------------------------------------------------------------------------------------------
#系统默认：077
#备注：该配置指定本地用户创建文件以及创建目录的默认权限：rw-------
local_umask=022
#----------------------------------------------------------------------------------------
#系统默认：0(无限制)
#备注：本地用户传输率限制在50KB/s,0表示不受限制
local_max_rate=0
#--------------------------------------------------------------------------------------------
#该配置项指定一个目录，该目录下面是一些文件，这些文件的文件名，均以本地用户各自的用户名命名，用户
#可以针对每个用户，做出不同的配置。当一个用户登录时，会去该目录下加载该用户自己的配置文件
#备注：该配置的功能非常强大，可以实现专门针对不同用户，给出不同的配置文件
#user_config_dir=/etc/vsftpd_user_conf
#-----------------------------------------------------------------------------------------
#系统默认：无  
#备注：指定一个由逗号分离的FTP命令列表，在列表内的命令是被允许的，之外的命令将被拒绝
#cmds_allowed=ABOR,ACCT,APPE,CWD,CDUP,DELE,HELP,LIST,MODE,MDTM,MKD,NOOP,NLST,PASS,PASV,PORT,PWD,QUIT,REIN,RETR,RMD,RNFR,RNTO,SITE,SIZE,STOR,STAT,STOU,STRU,SYST,TYPE,USER
#-----------------------------------------------------------------------------------------
#系统默认：无  
#备注：指定一个由逗号分离的FTP命令列表，在列表内的命令是被禁止的
#备注2：如果一个命令既出现在cmds_allowed里面，又出现在cmds_denied里面，那么，cmds_denied优先，即该命令是被禁止的
#cmds_denied=DELE
#CWD - change working directory 更改目录
#DELE - delete a remote file 删除文件
#LIST - list remote files 列目录
#MKD - make a remote directory 新建文件夹
#NLST - name list of remote directory
#PWD - print working directory 显示当前工作目录
#RETR - retrieve a remote file 下载文件
#RMD - remove a remote directory 删除目录
#RNFR - rename from 重命名
#RNTO - rename to 重命名
#STOR - store a file on the remote host 上传文件
# ABOR - abort a file transfer 取消文件传输
# CWD - change working directory 更改目录
# DELE - delete a remote file 删除文件
# LIST - list remote files 列目录
# MDTM - return the modification time of a file 返回文件的更新时间
# MKD - make a remote directory 新建文件夹
# NLST - name list of remote directory
# PASS - send password
# PASV - enter passive mode
# PORT - open a data port 打开一个传输端口
# PWD - print working directory 显示当前工作目录
# QUIT - terminate the connection 退出
# RETR - retrieve a remote file 下载文件
# RMD - remove a remote directory
# RNFR - rename from
# RNTO - rename to
# SITE - site-specific commands
# SIZE - return the size of a file 返回文件大小
# STOR - store a file on the remote host 上传文件
# TYPE - set transfer type
# USER - send username
# less common commands:
# ACCT* - send account information
# APPE - append to a remote file
# CDUP - CWD to the parent of the current directory
# HELP - return help on using the server
# MODE - set transfer mode
# NOOP - do nothing
# REIN* - reinitialize the connection
# STAT - return server status
# STOU - store a file uniquely
# STRU - set file transfer structure
# SYST - return system type




##############################################################################################
##########################################虚拟用户配置#########################################
##############################################################################################
#----------------------------------------------------------------------------------------
#YES:使能以后，所有非匿名用户在登录之后都被归类为gust login
#默认：NO
#备注：一个gust login，会被重新映射到在guest_username中设置的身份
guest_enable=NO
#----------------------------------------------------------------------------------------
#前提：只有在guest_enable=YES时才会生效
#默认：ftp
#备注：指定访客的身份
guest_username=ftp
#----------------------------------------------------------------------------------------
#YES:虚拟用户使用与本地用户相同的权限
#NO:虚拟用户使用与匿名用户相同的权限
#默认：NO
virtual_use_local_privs=NO




##############################################################################################
##########################################SSL配置#############################################
##############################################################################################
#备注：
#(1)ftp传输数据是明文，弄个抓包软件就可以通过数据包来分析到账号和密码，为了搭建一个安全性比较高ftp，可以结合SSL来解决问题
#(2)SSL(Secure Socket Layer)工作于传输层和应用程序之间,应用程序只要采用SSL提供的一套SSL套接字API来替换标准的Socket套接字,
#   就可以把程序转换为SSL化的安全网络程序,在传输过程中将由SSL协议实现数据机密性和完整性的保证
#(3)SSL取得大规模成功后,IETF将SSL作了标准化,并将其称为TLS,(Transport Layer Security),ftp结合SSL,将实现传输数据的加密,
#   保证数据不被别人窃取
#(4)vsftpd支持SSL，必须让OPENSSL≥0.9.6版本，还有就是本身vsftpd版本是否支持，查询vsftpd软件是否支持SSL，ldd /usr/sbin/vsft\
#   pd |grep libssl,如没有输出libssl.so.6 => /lib/libssl.so.6 (0xf7f27000)类似文本，说明此vsftpd版本不支持SSL
#(5)从底层来讲：使用了该功能，vsftpd将会针对OpenSSL来编译，支持SSL安全连接，并且是在FTP的命令通道和数据通道均加密
#(6)使用该功能FTP客户端也需要SSL支持才行
#备注2：手册建议，只有在需要的时候才使能它，因为vsftp不保证 OpenSSL libraries 的安全性
#----------------------------------------------------------------------------------------------
#YES:vsftpd将支持安全连接SSL
#系统默认：NO
ssl_enable=NO
#-------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:匿名用户将被允许使用安全的SSL连接
#系统默认：NO
allow_anon_ssl=YES
#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:所有的匿名用户在发送密码过程中都强制使用SSL连接
#系统默认：NO
force_anon_logins_ssl=YES
#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:所有的匿名用户在数据连接data-ftp中发送和接收数据都强制使用安全SSL连接
#系统默认：NO
force_anon_data_ssl=YES

#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:所有的本地用户在在数据连接data-ftp中发送和接收数据都强制使用安全SSL连接
#系统默认：NO
force_local_data_ssl=YES
#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:所有的本地用户在发送密码过程中都强制使用SSL连接
#系统默认：NO
force_local_logins_ssl=YES

#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:使用TLS v1 protocol连接
#系统默认：YES
ssl_tlsv1=YES
#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:使用SSL v2 protocol
#系统默认：NO
ssl_sslv2=NO
#----------------------------------------------------------------------------------------------
#前提：ssl_enable=YES
#YES:使用SSL v3 protocol
#系统默认：NO
ssl_sslv3=NO
#----------------------------------------------------------------------------------------------
#该配置指出RSA证书的路径，vsftpd会加载该文件来对FTP连接中的数据进行SSL加密
rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
#----------------------------------------------------------------------------------------------
#该配置指出RSA private key的路径，vsftpd会加载该文件来对FTP连接中的数据进行SSL加密
rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key




##############################################################################################
##########################################日志配置#############################################
##############################################################################################
#YES:上传或者下载的细节将会被记录在/var/log/vsftpd.log中，也有可能是在vsftpd_log_file指定的文件中
#默认：NO
#备注：因为默认的格式可读性更高，所以xferlog_std_format设置为NO,除非使用wu-ftp日志文件分析软件
xferlog_enable=YES
xferlog_std_format=NO
xferlog_file=/var/log/vsftpd_xferlog.log
#----------------------------------------------------------------------------------------
#YES:两种日志文件会同时生成
#系统默认：NO
#备注：如果FTP服务器不是很忙碌的情况下，定制出两个日志文件还是不错的选择
#备注2：默认/var/log/xferlog and /var/log/vsftpd.log
dual_log_enable=YES
vsftpd_log_file=/var/log/vsftpd.log